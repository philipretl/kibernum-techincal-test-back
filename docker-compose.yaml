version: '3'
services:

  webserver:
    image: nginx:alpine
    restart: unless-stopped
    container_name: kibernum_nginx
    tty: true
    ports:
      - "8081:80"
    volumes:
      - ./apps/backend/:/var/www/backend
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
    networks:
      - app-network-2

  backend:
    container_name: kibernum_back
    build:
      context: apps/backend
      dockerfile: Dockerfile
    image: kibernum
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: kibernum
      SERVICE_TAGS: dev
    working_dir: /var/www/backend
    volumes:
      - ./apps/backend/:/var/www/backend
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network-2

  db:
    platform: linux/amd64
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    container_name: kibernum_db
    ports:
      - "3604:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE:  kibernum
      MYSQL_USER: philipretl
      MYSQL_PASSWORD: holamundo
    volumes:
      - dbdata_2:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network-2

  db_test:
    platform: linux/amd64
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    container_name: kibernum_db_test
    ports:
      - "3606:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kibernum
      MYSQL_USER: philipretl
      MYSQL_PASSWORD: holamundo
    volumes:
      - dbdata_2_test:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network-2
  redis:
    image: redis
    container_name: kibernum_redis
    command: redis-server --appendonly yes
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    ports:
      - "6380:6379"
    networks:
      - app-network-2

networks:
  app-network-2:
    driver: bridge

volumes:
  dbdata_2:
    driver: local
  dbdata_2_test:
    driver: local